apiVersion: v1
kind: ServiceAccount
metadata:
  name: myblog
  namespace: myblog
---
apiVersion: v1
kind: Service
metadata:
  name: myblog
  namespace: myblog
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8080
  selector:
    app: myblog
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: myblog
  name: myblog
  namespace: myblog
spec:
  replicas: 1
  selector:
    matchLabels:
      app: myblog
  template:
    metadata:
      labels:
        app: myblog
    spec:
      containers:
      - image: northamerica-northeast1-docker.pkg.dev/acm-workshop-216-tenant/containers/myblog:0.0.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: 8080
        name: myblog
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /
            port: 8080
        resources:
          limits:
            cpu: 15m
            memory: 122Mi
          requests:
            cpu: 5m
            memory: 6Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      nodeSelector:
        kubernetes.io/os: linux
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: myblog
      volumes:
      - emptyDir: {}
        name: tmp
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: myblog
  namespace: myblog
spec:
  gateways:
  - asm-ingress/asm-ingressgateway
  hosts:
  - alwaysupalwayson.com
  http:
  - route:
    - destination:
        host: myblog
        port:
          number: 80
---
apiVersion: networking.istio.io/v1beta1
kind: Sidecar
metadata:
  name: default
  namespace: myblog
spec:
  egress:
  - hosts:
    - istio-system/*
  workloadSelector:
    labels:
      app: myblog
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: deny-all
  namespace: myblog
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: myblog
  namespace: myblog
spec:
  egress:
  - {}
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: asm-ingress
      podSelector:
        matchLabels:
          asm: ingressgateway
    ports:
    - port: 8080
      protocol: TCP
  podSelector:
    matchLabels:
      app: myblog
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: myblog
  namespace: myblog
spec:
  rules:
  - from:
    - source:
        principals:
        - cluster.local/ns/asm-ingress/sa/asm-ingressgateway
    to:
    - operation:
        methods:
        - GET
        ports:
        - "8080"
  selector:
    matchLabels:
      app: myblog
